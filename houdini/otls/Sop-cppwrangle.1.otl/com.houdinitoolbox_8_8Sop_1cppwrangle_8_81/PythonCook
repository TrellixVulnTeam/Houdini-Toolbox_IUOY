"""Cook code for C++ Wrangle SOP."""

# =============================================================================
# IMPORTS
# =============================================================================

# Houdini
import hou
import hutil.cppinline

# =============================================================================

node = hou.pwd()

# Initialize to None so there is an object name 'lib' around in the case that
# compilation does not occur due to there being no function sources such as
# when the node is initially created and cooked.
lib = None

if not node.evalParm("pause_compiling"):
    hou.ui.setStatusMessage(f"Compiling: {node.path()}")

    try:
        lib = node.hm().build_library(node)

    # Couldn't compile
    except hutil.cppinline.CompilerError as inst:
        msg = f"Compilation failed: {node.path()}"

        if hou.isUIAvailable():
            hou.ui.setStatusMessage(msg, hou.severityType.Error)

        else:
            print(msg)

        if node.evalParm("print_compile_errors"):
            print(inst)

    # If there are no function sources
    except node.hm().NoFunctionSourcesError:
        msg = f"No functions to compile: {node.path()}"

        if hou.isUIAvailable():
            hou.ui.setStatusMessage(msg, hou.severityType.Warning)

    else:
        if hou.isUIAvailable():
            hou.ui.setStatusMessage(f"Compile complete: {node.path()}")

# Get and execute the Python code.
code = node.parm("code").unexpandedString()
exec(code)  # pylint: disable=exec-used
