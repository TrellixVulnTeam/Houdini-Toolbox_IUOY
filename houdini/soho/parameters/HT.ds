/*
 *  Houdini Toolbox parameters for nodes
 */

#include "$HFS/houdini/soho/parameters/CommonMacros.ds"

{
    name houdini_toolbox_parms
    label "Houdini Toolbox Properties"
    parmtag { spare_category "Houdini Toolbox Properties" }

    collection {
        name    houdini_toolbox_automatic_aovs
        label   "Automatic AOVs"
        parmtag { spare_category "Automatic AOVs" }

        parm {
	    name	"enable_auto_aovs"
	    label	"Enable Automatic AOVs"
	    type	toggle
	    nolabel
	    joinnext
	    default	{ "1" }
	    help	"Enable automatically adding AOVs."
	    range	{ 0 1 }
	    export	none
        }
        parm {
            name	"auto_aovs"
            label	"Automatic AOVs"
            type	string
	    joinnext
            default	{ "" }
            help	"Automatically add AOVs at IFD generation time."
            disablewhen	"{ enable_auto_aovs == 0 }"
            menutoggle	{
                [ "from houdini_toolbox.sohohooks.aovs import manager" ]
                [ "" ]
                [ "return manager.build_menu_script()" ]
                language	python
            }
            range	{ 0 1 }
            export	none
        }
	parm {
	    name	"aov_editor"
	    label	"Editor"
	    type	button
	    nolabel
	    default	{ "0" }
	    help	"Open a floating AOV Manager panel bound to this node."
	    range	{ 0 1 }
	    export	none
	    parmtag	{ "button_icon" "PANETYPES_viewer_cop" }
	    parmtag	{ "script_callback" "import houdini_toolbox.ui.aovs.utils; houdini_toolbox.ui.aovs.utils.open_aov_editor(hou.pwd())" }
	    parmtag	{ "script_callback_language" "python" }
	}
    }

    collection {
        name    houdini_toolbox_ip_overrides
        label   "ip Overrides"
        parmtag { spare_category "ip Overrides" }

	parm {
	    name	"enable_ip_override"
	    label	"Override ip Settings"
	    type	toggle
	    joinnext
	    default	{ "0" }
	    help	"Enable overriding render settings for ip."
	    range	{ 0 1 }
	    export	none
	}
	parm {
	    name	"set_command"
	    label	"Set Command"
	    type	button
	    nolabel
	    default	{ "0" }
	    help	"Set the appropriate command to render with the PyFilter"
	    range	{ 0 1 }
	    export	none
	    parmtag	{ "button_icon" "hicon:/SVGIcons.index?ROP_soho.svg" }
	    parmtag	{ "script_callback" "__import__('houdini_toolbox.pyfilter.operations', globals(), locals(), ['ipoverrides']).ipoverrides.set_mantra_command(hou.pwd())" }
	    parmtag	{ "script_callback_language" "python" }
	}
	parm {
	    name	"ip_override_camerares"
	    label	"Enable Resolution Override"
	    type	toggle
	    nolabel
	    joinnext
	    default	{ "0" }
	    help	"Enable overriding ip camera resolution."
	    disablewhen	"{ enable_ip_override == 0 }"
	    range	{ 0 1 }
	    export	none
	}
	parm {
	    name	"ip_res_fraction"
	    label	"Resolution Scale"
	    type	string
	    joinnext
	    default	{ "0.5" }
	    help	"Scale the image resolution."
	    disablewhen	"{ ip_override_camerares == 0 } { enable_ip_override == 0 }"
	    menu	{
		"0.1"	"1/10 (One Tenth Resolution)"
		"0.2"	"1/5 (One Fifth Resolution)"
		"0.25"	"1/4 (Quarter Resolution)"
		"0.3333333"	"1/3 (One Third Resolution)"
		"0.5"	"1/2 (Half Resolution)"
		"0.6666666"	"2/3 (Two Thirds Resolution)"
		"0.75"	"3/4 (Three Quarter Resolution)"
	    }
	    range	{ 0 1 }
	    export	none
	}
	parm {
	    name	"ip_resolution_display"
	    label	"Resolution"
	    type	label
	    nolabel
	    default	{ "`pythonexprs(\"__import__('houdini_toolbox.pyfilter.operations', globals(), locals(), ['ipoverrides']).ipoverrides.build_resolution_scale_display(hou.pwd())\")`" }
	    hidewhen	"{ enable_ip_override == 0 } { ip_override_camerares == 0 }"
	    range	{ 0 1 }
	    export	none
	}
	parm {
	    name	"ip_sample_scale"
	    label	"Pixel Sample %"
	    type	float
	    joinnext
	    default	{ "0.5" }
	    help	"Scale the pixel samples."
	    disablewhen	"{ enable_ip_override == 0 }"
	    range	{ 0! 1 }
	    export	none
	}
	parm {
	    name	"ip_sample_display"
	    label	"Pixel Samples"
	    type	label
	    nolabel
	    default	{ "`pythonexprs(\"__import__('houdini_toolbox.pyfilter.operations', globals(), locals(), ['ipoverrides']).ipoverrides.build_pixel_sample_scale_display(hou.pwd())\")`" }
	    hidewhen	"{ enable_ip_override == 0 }"
	    range	{ 0 1 }
	    export	none
	}
	parm {
	    name	"ip_disable_blur"
	    label	"Disable Motion Blur"
	    type	toggle
	    default	{ "0" }
	    help	"Disable rendering with motion blur."
	    disablewhen	"{ enable_ip_override == 0 }"
	    range	{ 0 1 }
	    export	none
	}
	parm {
	    name	"ip_disable_aovs"
	    label	"Disable AOVs"
	    type	toggle
	    default	{ "0" }
	    help	"Disable rendering extra image planes."
	    disablewhen	"{ enable_ip_override == 0 }"
	    range	{ 0 1 }
	    export	none
	}
	parm {
	    name	"ip_disable_deep"
	    label	"Disable Deep Output"
	    type	toggle
	    default	{ "1" }
	    help	"Disable generating any deep images."
	    disablewhen	"{ enable_ip_override == 0 }"
	    range	{ 0 1 }
	    export	none
	}
	parm {
	    name	"ip_disable_displacement"
	    label	"Disable Displacement"
	    type	toggle
	    default	{ "0" }
	    help	"Disable shader displacement."
	    disablewhen	"{ enable_ip_override == 0 }"
	    range	{ 0 1 }
	    export	none
	}
	parm {
	    name	"ip_disable_subd"
	    label	"Disable Subdivision"
	    type	toggle
	    default	{ "0" }
	    help	"Disable subdivision."
	    disablewhen	"{ enable_ip_override == 0 }"
	    range	{ 0 1 }
	    export	none
	}
	parm {
	    name	"ip_disable_tilecallback"
	    label	"Disable Tile Callback"
	    type	toggle
	    default	{ "1" }
	    help	"Disable any tile callback scripts."
	    disablewhen	"{ enable_ip_override == 0 }"
	    range	{ 0 1 }
	    export	none
	}
	parm {
	    name	"ip_disable_matte"
	    label	"Disable Matte/Phantom Objects"
	    type	toggle
	    default	{ "0" }
	    help	"Disable any matte or phantom objects."
	    disablewhen	"{ enable_ip_override == 0 }"
	    range	{ 0 1 }
	    export	none
	}
	parm {
	    name	"ip_bucket_size"
	    label	"Bucket Size"
	    type	integer
	    default	{ "10" }
	    disablewhen	"{ enable_ip_override == 0 }"
	    range	{ 0 32 }
	}
	parm {
	    name	"ip_transparent"
	    label	"Stochastic Transparency"
	    type	toggle
	    nolabel
	    joinnext
	    default	{ "off" }
	    disablewhen	"{ enable_ip_override == 0 }"
	    range	{ 0 1 }
	    parmtag	{ "autoscope" "0000000000000000" }
	    parmtag	{ "spare_category" "Sampling" }
	}
	parm {
	    name	"ip_transparent_samples"
	    label	"Stochastic Samples"
	    type	integer
	    default	{ "4" }
	    disablewhen	"{ enable_ip_override == 0 } { ip_transparent == 0 }"
	    range	{ 1 16 }
	    parmtag	{ "autoscope" "0000000000000000" }
	    parmtag	{ "spare_category" "Sampling" }
	}
    }
}
